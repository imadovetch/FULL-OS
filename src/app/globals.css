@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {

  html {
    --dark: theme(colors.zinc.950);
    --dark-t: theme(colors.zinc.900);
    --light: theme(colors.zinc.100);
    --shadow-dark: #00000030;
    --shadow-light: #ffffff30;
    --primary: theme(colors.emerald.300);
  }

  body {
    background-color: var(--dark);
    color: var(--light);
    height: 100vh;
    overflow: hidden;
  }

  .see {
    @apply border border-red-500
  }

  .convchoosed{
	background-color: rgba(75, 175, 219, 0.552);
	
  }

/* camera */
video {
	height: 100%;
	width: 100%;
  
	object-fit: cover;
	transition: transform 0.4s;
	object-position: center;
}

.imageContainer {
	height: 100%;
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
	background-size: 100%;
	background-position: center;
	background-repeat: no-repeat;


	position: relative;
	overflow: hidden;
	background: #000;
}

.imageContainerInner {
	width: 100%;
	overflow: hidden;
	margin-top: -64px;
	position: relative;
}

.imageContainer img {
	display: flex;
  
	align-self: center;
	width: 100%;
	height: 100%;
	transform: scale(1);
	transition: transform 0.4s;
}

.controls {
	position: absolute;
	bottom: 128px;
	background: rgba(0, 0, 0, 0.54);
	border-radius: 50px;
	display: flex;
	gap: 16px;
	padding: 8px 12px;
	z-index: 20;
}

.controls button {
	display: flex;
	align-items: center;
	justify-content: center;
	width: 32px;
	height: 32px;
	border: none;
	border-radius: 50%;
	background: rgba(0, 0, 0, 0.56);
	color: #fff;
	font-size: 14px;
	font-weight: 600;
	font-family: system-ui, arial, sans-serif;
	transition: transform 0.2s;
}

.controls button span {
	display: none;
}

.controls button.active {
	transform: scale(1.2);
	color: yellow;
	transition: transform 0.2s;
}

.controls button.active span {
	font-size: 12px;
	display: flex;
}

.otherControls {
	position: absolute;
	bottom: 16px;

	left: 0;
	right: 0;
	display: flex;
	justify-content: space-between;
	padding: 10px 30px;
	align-items: center;
	z-index: 20;
}

.camerabutton {
	height: 52px;
	width: 52px;
	background: #fff;
	border-radius: 100%;
	box-shadow: 0px 0px 0px 3px rgb(0 0 0 / 90%), 0px 0px 0px 6px #fff;
	border: 0;
}

.thumbnail {
	height: 48px;
	width: 48px;
	background: #fff;
	overflow: hidden;
	border-radius: 6px;
	border: 0;
}

.switchCamera {
	height: 45px;
	width: 45px;



}

.switchCamera span {
	color: #ffff;
	display: flex;
	justify-content: center;
	font-size: 30px;
}

.thumbnail img {
	object-fit: cover;
}

@media screen and (max-width: 767px) {
	.imageContainer {
		overflow: hidden;
		border: 0;
		border-radius: 0;
	}

	.imageContainer,
	.imageContainer > img {
		width: 100vw;
		height: 100vh;
	}

	.imageContainerInner {
		height: 100vh;
		margin: 0;
	}
  /* end cam */
}

/* Styles for flip animation */
@keyframes flipInY {
	from {
		transform: perspective(400px) rotateY(90deg);
		opacity: 0;
	}

	to {
		transform: perspective(400px) rotateY(0);
		opacity: 1;
	}
}

@keyframes flipOutY {
	from {
		transform: perspective(400px) rotateY(0);
		opacity: 1;
	}

	to {
		transform: perspective(400px) rotateY(90deg);
		opacity: 0;
	}
}

.flipping-out {
	animation: flipOutY 0.5s forwards;
}

.flipping-in {
	animation: flipInY 0.5s forwards;
}

.flash {
	height: 100%;
	width: 100%;
	position: absolute;
	z-index: 9;
	top: 0;
}

.shutterClick {
	animation: cameraFlash 0.3s 0.3s alternate-reverse 1;
}

@keyframes cameraFlash {
	from {
		box-shadow: none;
	}

	to {
		box-shadow: inset 0 0 0 100px #fff;
	}
}

.heart {
	position: absolute;
	bottom: 0;
	left: 50%;
	font-size: 24px;
	transform: translateX(-50%);
	opacity: 0;
	transition: bottom 2s ease, opacity 2s ease;
}

}

@layer components {

  .btn-simple {
    @apply w-full h-full p-1 hover:bg-shadow-light
  }

  .btn-simple.active {
    @apply bg-shadow-light
  }


  .btn-dark {
    @apply bg-dark-t p-2 duration-300 hover:bg-shadow-light rounded-md
  }
  .appsbackground{

    box-shadow: rgba(212, 208, 208, 0.4) 0px 2px 4px, rgba(216, 216, 216, 0.3) 0px 7px 13px -3px, rgba(247, 247, 247, 0.2) 0px -3px 0px , rgba(59, 59, 59, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(2, 2, 2, 0.09) 0px 8px 4px, rgba(71, 71, 71, 0.09) 0px 16px 8px, rgba(92, 92, 92, 0.137) 0px 32px 16px;  }
	.checkbox-wrapper-10 .tgl {
		display: none;
	  }
	  
	  .checkbox-wrapper-10 .tgl,
		.checkbox-wrapper-10 .tgl:after,
		.checkbox-wrapper-10 .tgl:before,
		.checkbox-wrapper-10 .tgl *,
		.checkbox-wrapper-10 .tgl *:after,
		.checkbox-wrapper-10 .tgl *:before,
		.checkbox-wrapper-10 .tgl + .tgl-btn {
		box-sizing: border-box;
	  }
	  
	  .checkbox-wrapper-10 .tgl::-moz-selection,
		.checkbox-wrapper-10 .tgl:after::-moz-selection,
		.checkbox-wrapper-10 .tgl:before::-moz-selection,
		.checkbox-wrapper-10 .tgl *::-moz-selection,
		.checkbox-wrapper-10 .tgl *:after::-moz-selection,
		.checkbox-wrapper-10 .tgl *:before::-moz-selection,
		.checkbox-wrapper-10 .tgl + .tgl-btn::-moz-selection,
		.checkbox-wrapper-10 .tgl::selection,
		.checkbox-wrapper-10 .tgl:after::selection,
		.checkbox-wrapper-10 .tgl:before::selection,
		.checkbox-wrapper-10 .tgl *::selection,
		.checkbox-wrapper-10 .tgl *:after::selection,
		.checkbox-wrapper-10 .tgl *:before::selection,
		.checkbox-wrapper-10 .tgl + .tgl-btn::selection {
		background: none;
	  }
	  
	  .checkbox-wrapper-10 .tgl + .tgl-btn {
		outline: 0;
		display: block;
		width: 4em;
		height: 2em;
		position: relative;
		cursor: pointer;
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;
	  }
	  
	  .checkbox-wrapper-10 .tgl + .tgl-btn:after,
		.checkbox-wrapper-10 .tgl + .tgl-btn:before {
		position: relative;
		display: block;
		content: "";
		width: 50%;
		height: 100%;
	  }
	  
	  .checkbox-wrapper-10 .tgl + .tgl-btn:after {
		left: 0;
	  }
	  
	  .checkbox-wrapper-10 .tgl + .tgl-btn:before {
		display: none;
	  }
	  
	  .checkbox-wrapper-10 .tgl:checked + .tgl-btn:after {
		left: 50%;
	  }
	  
	  .checkbox-wrapper-10 .tgl-flip + .tgl-btn {
		padding: 2px;
		transition: all 0.2s ease;
		font-family: sans-serif;
		perspective: 100px;
	  }
	  
	  .checkbox-wrapper-10 .tgl-flip + .tgl-btn:after,
		.checkbox-wrapper-10 .tgl-flip + .tgl-btn:before {
		display: inline-block;
		transition: all 0.4s ease;
		width: 100%;
		text-align: center;
		position: absolute;
		line-height: 2em;
		font-weight: bold;
		color: #fff;
		position: absolute;
		top: 0;
		left: 0;
		-webkit-backface-visibility: hidden;
		backface-visibility: hidden;
		border-radius: 4px;
	  }
	  
	  .checkbox-wrapper-10 .tgl-flip + .tgl-btn:after {
		content: attr(data-tg-on);
		background: #02C66F;
		transform: rotateY(-180deg);
	  }
	  
	  .checkbox-wrapper-10 .tgl-flip + .tgl-btn:before {
		background: #FF3A19;
		content: attr(data-tg-off);
	  }
	  
	  .checkbox-wrapper-10 .tgl-flip + .tgl-btn:active:before {
		transform: rotateY(-20deg);
	  }
	  
	  .checkbox-wrapper-10 .tgl-flip:checked + .tgl-btn:before {
		transform: rotateY(180deg);
	  }
	  
	  .checkbox-wrapper-10 .tgl-flip:checked + .tgl-btn:after {
		transform: rotateY(0);
		left: 0;
		background: #7FC6A6;
	  }
	  
	  .checkbox-wrapper-10 .tgl-flip:checked + .tgl-btn:active:after {
		transform: rotateY(20deg);
	  }
}

@layer utilities {
  .animate-move {
    animation: kfr-animate-move 1s infinite;
  }

  @keyframes kfr-animate-move {
    0% {
      transform: rotate(-10deg);
    }
    50% {
      transform: rotate(10deg);
    }
    100% {
      transform: rotate(-10deg);
    }
  }
  .animate-hide {
    animation: kfr-animate-hide .3s forwards;
  }

  @keyframes kfr-animate-hide {
    100% {
      transform: scale(0);
      opacity: 0;
      display: hidden;
    }
  }

  .animate-open {
    animation: kfr-animate-open .3s forwards;
  }

  @keyframes kfr-animate-open {
    0% {
      transform: scale(0);
      opacity: 0;
      display: hidden;
    }
  }
  .iconholder:hover .icon {
    animation: iconrot 0.3s ease;
  }

  @keyframes iconrot {
      0% {
          transform: rotate(0deg);
      }
      50% {
          transform: rotate(20deg);
      }
      100% {
          transform: rotate(-10deg);
      }
  }

}


